TEST.SUBPROGRAM: <<COMPOUND>>
TEST.SUBPROGRAM: <<INIT>>
TEST.UNIT: .\\lvandeve_lodepng\\src\\lodepng.cpp
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_malloc(size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_free(void*)
TEST.NEW
TEST.NAME:lodepng_free_voidmul_manual_0
TEST.END
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_realloc(void*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_strlen(char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_addofl(size_t,size_t,size_t*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_memset(void*,int,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_memcpy(void*,void const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_gtofl(size_t,size_t,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_mulofl(size_t,size_t,size_t*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\uivector_cleanup(void*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\uivector_init(uivector*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\uivector_resize(uivector*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\uivector_push_back(uivector*,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\ucvector_reserve(ucvector*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\string_cleanup(char**)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\ucvector_init(unsigned char*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\ucvector_resize(ucvector*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\alloc_string_sized(char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\alloc_string(char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_read32bitInt(unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_set32bitInt(unsigned char*,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_filesize(FILE*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_load_file_(unsigned char**,size_t*,FILE*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_load_file(unsigned char**,size_t*,char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_save_file(unsigned char const*,size_t,char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\writeBits(LodePNGBitWriter*,unsigned,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\writeBitsReversed(LodePNGBitWriter*,unsigned,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\LodePNGBitWriter_init(LodePNGBitWriter*,ucvector*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\LodePNGBitReader_init(LodePNGBitReader*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\ensureBits9(LodePNGBitReader*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\ensureBits17(LodePNGBitReader*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\ensureBits25(LodePNGBitReader*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\advanceBits(LodePNGBitReader*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\peekBits(LodePNGBitReader*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\ensureBits32(LodePNGBitReader*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\reverseBits(unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readBits(LodePNGBitReader*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\HuffmanTree_init(HuffmanTree*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\HuffmanTree_cleanup(HuffmanTree*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\HuffmanTree_makeFromLengths2(HuffmanTree*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\HuffmanTree_makeTable(HuffmanTree*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\HuffmanTree_makeFromLengths(HuffmanTree*,unsigned const*,size_t,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\bpmnode_create(BPMLists*,int,unsigned,BPMNode*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\bpmnode_sort(BPMNode*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\boundaryPM(BPMLists*,BPMNode*,size_t,int,int)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_huffman_code_lengths(unsigned*,unsigned const*,size_t,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\generateFixedLitLenTree(HuffmanTree*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\HuffmanTree_makeFromFrequencies(HuffmanTree*,unsigned const*,size_t,size_t,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\generateFixedDistanceTree(HuffmanTree*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\huffmanDecodeSymbol(LodePNGBitReader*,HuffmanTree const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\getTreeInflateFixed(HuffmanTree*,HuffmanTree*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\getTreeInflateDynamic(HuffmanTree*,HuffmanTree*,LodePNGBitReader*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\inflateHuffmanBlock(ucvector*,LodePNGBitReader*,unsigned,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_inflatev(ucvector*,unsigned char const*,size_t,LodePNGDecompressSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\inflateNoCompression(ucvector*,LodePNGBitReader*,LodePNGDecompressSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_inflate(unsigned char**,size_t*,unsigned char const*,size_t,LodePNGDecompressSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\inflatev(ucvector*,unsigned char const*,size_t,LodePNGDecompressSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\searchCodeIndex(unsigned const*,size_t,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addLengthDistance(uivector*,size_t,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\hash_cleanup(Hash*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\hash_init(Hash*,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\countZeros(unsigned char const*,size_t,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\getHash(unsigned char const*,size_t,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\updateHashChain(Hash*,size_t,unsigned,unsigned short)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\deflateNoCompression(ucvector*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\writeLZ77data(LodePNGBitWriter*,uivector const*,HuffmanTree const*,HuffmanTree const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\encodeLZ77(uivector*,Hash*,unsigned char const*,size_t,size_t,unsigned,unsigned,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\deflateDynamic(LodePNGBitWriter*,Hash*,unsigned char const*,size_t,size_t,LodePNGCompressSettings const*,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_deflatev(ucvector*,unsigned char const*,size_t,LodePNGCompressSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\deflateFixed(LodePNGBitWriter*,Hash*,unsigned char const*,size_t,size_t,LodePNGCompressSettings const*,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_deflate(unsigned char**,size_t*,unsigned char const*,size_t,LodePNGCompressSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\update_adler32(unsigned,unsigned char const*,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\deflate(unsigned char**,size_t*,unsigned char const*,size_t,LodePNGCompressSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\adler32(unsigned char const*,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_zlib_decompressv(ucvector*,unsigned char const*,size_t,LodePNGDecompressSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_zlib_decompress(unsigned char**,size_t*,unsigned char const*,size_t,LodePNGDecompressSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\zlib_decompress(unsigned char**,size_t*,size_t,unsigned char const*,size_t,LodePNGDecompressSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_zlib_compress(unsigned char**,size_t*,unsigned char const*,size_t,LodePNGCompressSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\zlib_compress(unsigned char**,size_t*,unsigned char const*,size_t,LodePNGCompressSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_compress_settings_init(LodePNGCompressSettings*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_decompress_settings_init(LodePNGDecompressSettings*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_crc32(unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readBitFromReversedStream(size_t*,unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readBitsFromReversedStream(size_t*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_length(unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_type(char[5],unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\setBitOfReversedStream(size_t*,unsigned char*,unsigned char)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_type_name_valid(unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_private(unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_ancillary(unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_type_equals(unsigned char const*,char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_data(unsigned char*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_reserved(unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_safetocopy(unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_data_const(unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_check_crc(unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_generate_crc(unsigned char*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_next(unsigned char*,unsigned char*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_next_const(unsigned char const*,unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_find(unsigned char*,unsigned char*,char const[5])
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_find_const(unsigned char const*,unsigned char const*,char const[5])
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_append(unsigned char**,size_t*,unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_init(unsigned char**,ucvector*,size_t,char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\checkColorValidity(LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_create(unsigned char**,size_t*,size_t,char const*,unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_chunk_createv(ucvector*,size_t,char const*,unsigned char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\getNumColorChannels(LodePNGColorType)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_color_mode_init(LodePNGColorMode*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_get_bpp_lct(LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_color_mode_alloc_palette(LodePNGColorMode*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_color_mode_cleanup(LodePNGColorMode*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_color_mode_copy(LodePNGColorMode*,LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_palette_clear(LodePNGColorMode*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_color_mode_make(LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_color_mode_equal(LodePNGColorMode const*,LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_get_bpp(LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_palette_add(LodePNGColorMode*,unsigned char,unsigned char,unsigned char,unsigned char)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_get_channels(LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_is_palette_type(LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_is_alpha_type(LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_is_greyscale_type(LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_has_palette_alpha(LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_can_have_alpha(LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_get_raw_size_lct(unsigned,unsigned,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_get_raw_size_idat(unsigned,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_get_raw_size(unsigned,unsigned,LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_pixel_overflow(unsigned,unsigned,LodePNGColorMode const*,LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\LodePNGUnknownChunks_init(LodePNGInfo*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\LodePNGUnknownChunks_cleanup(LodePNGInfo*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\LodePNGUnknownChunks_copy(LodePNGInfo*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\LodePNGText_init(LodePNGInfo*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\LodePNGText_cleanup(LodePNGInfo*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_add_text(LodePNGInfo*,char const*,char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_add_text_sized(LodePNGInfo*,char const*,char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\LodePNGText_copy(LodePNGInfo*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_clear_text(LodePNGInfo*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\LodePNGIText_init(LodePNGInfo*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\LodePNGIText_cleanup(LodePNGInfo*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_clear_itext(LodePNGInfo*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\LodePNGIText_copy(LodePNGInfo*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_add_itext_sized(LodePNGInfo*,char const*,char const*,char const*,char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_add_itext(LodePNGInfo*,char const*,char const*,char const*,char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_set_icc(LodePNGInfo*,char const*,unsigned char const*,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_clear_icc(LodePNGInfo*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_info_init(LodePNGInfo*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_clear_exif(LodePNGInfo*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_set_exif(LodePNGInfo*,unsigned char const*,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_info_cleanup(LodePNGInfo*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addColorBits(unsigned char*,size_t,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_info_copy(LodePNGInfo*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\color_tree_init(ColorTree*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\color_tree_cleanup(ColorTree*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\color_tree_has(ColorTree*,unsigned char,unsigned char,unsigned char,unsigned char)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\color_tree_get(ColorTree*,unsigned char,unsigned char,unsigned char,unsigned char)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\color_tree_add(ColorTree*,unsigned char,unsigned char,unsigned char,unsigned char,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\rgba8ToPixel(unsigned char*,size_t,LodePNGColorMode const*,ColorTree*,unsigned char,unsigned char,unsigned char,unsigned char)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\rgba16ToPixel(unsigned char*,size_t,LodePNGColorMode const*,unsigned short,unsigned short,unsigned short,unsigned short)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\getPixelColorRGBA8(unsigned char*,unsigned char*,unsigned char*,unsigned char*,unsigned char const*,size_t,LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\getPixelColorsRGBA8(unsigned char*,size_t,unsigned char const*,LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\getPixelColorsRGB8(unsigned char*,size_t,unsigned char const*,LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_convert(unsigned char*,unsigned char const*,LodePNGColorMode const*,LodePNGColorMode const*,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\getPixelColorRGBA16(unsigned short*,unsigned short*,unsigned short*,unsigned short*,unsigned char const*,size_t,LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\getValueRequiredBits(unsigned char)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_convert_rgb(unsigned*,unsigned*,unsigned*,unsigned,unsigned,unsigned,LodePNGColorMode const*,LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_color_stats_init(LodePNGColorStats*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_color_stats_add(LodePNGColorStats*,unsigned,unsigned,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_compute_color_stats(LodePNGColorStats*,unsigned char const*,unsigned,unsigned,LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\auto_choose_color(LodePNGColorMode*,LodePNGColorMode const*,LodePNGColorStats const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\paethPredictor(unsigned char,unsigned char,unsigned char)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_inspect(unsigned*,unsigned*,LodePNGState*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\Adam7_getpassvalues(unsigned[7],unsigned[7],size_t[8],size_t[8],size_t[8],unsigned,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\unfilterScanline(unsigned char*,unsigned char const*,unsigned char const*,size_t,unsigned char,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\unfilter(unsigned char*,unsigned char const*,unsigned,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\removePaddingBits(unsigned char*,unsigned char const*,size_t,size_t,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\Adam7_deinterlace(unsigned char*,unsigned char const*,unsigned,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\postProcessScanlines(unsigned char*,unsigned char*,unsigned,unsigned,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_PLTE(LodePNGColorMode*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_tRNS(LodePNGColorMode*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_bKGD(LodePNGInfo*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_tEXt(LodePNGInfo*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_zTXt(LodePNGInfo*,LodePNGDecoderSettings const*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_tIME(LodePNGInfo*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_iTXt(LodePNGInfo*,LodePNGDecoderSettings const*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_pHYs(LodePNGInfo*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_gAMA(LodePNGInfo*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_cHRM(LodePNGInfo*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_sRGB(LodePNGInfo*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_mDCV(LodePNGInfo*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_cICP(LodePNGInfo*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_iCCP(LodePNGInfo*,LodePNGDecoderSettings const*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_cLLI(LodePNGInfo*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_sBIT(LodePNGInfo*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\readChunk_eXIf(LodePNGInfo*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_inspect_chunk(LodePNGState*,size_t,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\decodeGeneric(unsigned char**,unsigned*,unsigned*,LodePNGState*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_decode(unsigned char**,unsigned*,unsigned*,LodePNGState*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_decode32(unsigned char**,unsigned*,unsigned*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_decode24(unsigned char**,unsigned*,unsigned*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_decode_memory(unsigned char**,unsigned*,unsigned*,unsigned char const*,size_t,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_decode24_file(unsigned char**,unsigned*,unsigned*,char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_decode32_file(unsigned char**,unsigned*,unsigned*,char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_decode_file(unsigned char**,unsigned*,unsigned*,char const*,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_decoder_settings_init(LodePNGDecoderSettings*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_state_init(LodePNGState*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_state_cleanup(LodePNGState*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\writeSignature(ucvector*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_state_copy(LodePNGState*,LodePNGState const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_PLTE(ucvector*,LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_tRNS(ucvector*,LodePNGColorMode const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_IHDR(ucvector*,unsigned,unsigned,LodePNGColorType,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_IEND(ucvector*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_tEXt(ucvector*,char const*,char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_IDAT(ucvector*,unsigned char const*,size_t,LodePNGCompressSettings*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_zTXt(ucvector*,char const*,char const*,LodePNGCompressSettings*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_bKGD(ucvector*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_tIME(ucvector*,LodePNGTime const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_iTXt(ucvector*,unsigned,char const*,char const*,char const*,char const*,LodePNGCompressSettings*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_pHYs(ucvector*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_gAMA(ucvector*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_cHRM(ucvector*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_sRGB(ucvector*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_iCCP(ucvector*,LodePNGInfo const*,LodePNGCompressSettings*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_cICP(ucvector*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_mDCV(ucvector*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_cLLI(ucvector*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_sBIT(ucvector*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addChunk_eXIf(ucvector*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\filterScanline(unsigned char*,unsigned char const*,unsigned char const*,size_t,size_t,unsigned char)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\ilog2i(size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\ilog2(size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\filter(unsigned char*,unsigned char const*,unsigned,unsigned,LodePNGColorMode const*,LodePNGEncoderSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addPaddingBits(unsigned char*,unsigned char const*,size_t,size_t,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\Adam7_interlace(unsigned char*,unsigned char const*,unsigned,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\isGrayICCProfile(unsigned char const*,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\addUnknownChunks(ucvector*,unsigned char*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\preProcessScanlines(unsigned char**,size_t*,unsigned char const*,unsigned,unsigned,LodePNGInfo const*,LodePNGEncoderSettings const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\isRGBICCProfile(unsigned char const*,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_encode(unsigned char**,size_t*,unsigned char const*,unsigned,unsigned,LodePNGState*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_encode_memory(unsigned char**,size_t*,unsigned char const*,unsigned,unsigned,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_encode32(unsigned char**,size_t*,unsigned char const*,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_encode24(unsigned char**,size_t*,unsigned char const*,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_encode_file(char const*,unsigned char const*,unsigned,unsigned,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_encode32_file(char const*,unsigned char const*,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_encode24_file(char const*,unsigned char const*,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_error_text(unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng_encoder_settings_init(LodePNGEncoderSettings*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\load_file_(std::vector<unsigned char>&,FILE*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\load_file(std::vector<unsigned char>&,std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\save_file(std::vector<unsigned char>const&,std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\decompress(std::vector<unsigned char>&,unsigned char const*,size_t,LodePNGDecompressSettings const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\decompress(std::vector<unsigned char>&,std::vector<unsigned char>const&,LodePNGDecompressSettings const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\compress(std::vector<unsigned char>&,unsigned char const*,size_t,LodePNGCompressSettings const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\compress(std::vector<unsigned char>&,std::vector<unsigned char>const&,LodePNGCompressSettings const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\State::State()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\State::~State()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\decode(std::vector<unsigned char>&,unsigned&,unsigned&,unsigned char const*,size_t,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\decode(std::vector<unsigned char>&,unsigned&,unsigned&,std::vector<unsigned char>const&,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\decode(std::vector<unsigned char>&,unsigned&,unsigned&,State&,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\decode(std::vector<unsigned char>&,unsigned&,unsigned&,State&,std::vector<unsigned char>const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\decode(std::vector<unsigned char>&,unsigned&,unsigned&,std::string const&,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\encode(std::vector<unsigned char>&,unsigned char const*,unsigned,unsigned,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\encode(std::vector<unsigned char>&,std::vector<unsigned char>const&,unsigned,unsigned,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\encode(std::vector<unsigned char>&,unsigned char const*,unsigned,unsigned,State&)
TEST.NEW
TEST.NAME:encode_std_vector_unsigned_char_unsigned_char_constmul_unsigned_unsigned_State_manual_0
TEST.END
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\encode(std::vector<unsigned char>&,std::vector<unsigned char>const&,unsigned,unsigned,State&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\encode(std::string const&,unsigned char const*,unsigned,unsigned,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\encode(std::string const&,std::vector<unsigned char>const&,unsigned,unsigned,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\State::State(State const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng.cpp\\lodepng\\State::operator=(State const&)

TEST.UNIT: .\\lvandeve_lodepng\\src\\lodepng_benchmark.cpp
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_benchmark.cpp\\getTime()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_benchmark.cpp\\assertTrue1(bool,std::string const&= "")
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_benchmark.cpp\\valtostr(T const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_benchmark.cpp\\assertEquals(T const&,U const&,std::string const&= "")
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_benchmark.cpp\\printValue(std::string const&,T const&,std::string const&= "")
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_benchmark.cpp\\printValue(std::string const&,T const&,std::string const&,U const&,std::string const&= "")
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_benchmark.cpp\\testDecode(std::vector<unsigned char>const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_benchmark.cpp\\testEncode(Image&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_benchmark.cpp\\testFile(std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_benchmark.cpp\\getFilePart(std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_benchmark.cpp\\showHelp(int,char*[])

TEST.UNIT: .\\lvandeve_lodepng\\src\\lodepng_fuzzer.cpp
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_fuzzer.cpp\\LLVMFuzzerTestOneInput(uint8_t const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_fuzzer.cpp\\testDecode(lodepng::State&,uint8_t const*,size_t)

TEST.UNIT: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\fail()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\valtostr(unsigned char const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\valtostr(T const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\valtostr(T const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\assertEquals(T const&,U const&,std::string const&= "")
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\assertTrue(bool,std::string const&= "")
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\assertNoPNGError(unsigned,std::string const&= "")
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\assertNoError(unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\isNear(T,U,V)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\diff(T,U)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\toBase64(T&,U const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\valtostr(std::vector<T>const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\fromBase64(int)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\fromBase64(T&,U const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\leftrotate(unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\getRandom()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\md5sum(unsigned char const*,size_t,unsigned*,unsigned*,unsigned*,unsigned*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\md5sum(unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\md5sum(std::vector<unsigned char>const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\getNumColorChannels(unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\generateTestImageRequiringColorType16(Image&,LodePNGColorType,unsigned,bool)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\generateTestImage(Image&,unsigned,unsigned,LodePNGColorType= LCT_RGBA,unsigned= 8)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\generateTestImageRequiringColorType8(Image&,LodePNGColorType,unsigned,bool)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\assertPixels(Image&,unsigned char const*,std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\doCodecTestC(Image&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\doCodecTestCPP(Image&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\doCodecTestNoLZ77(Image&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\doCodecTestUncompressed(Image&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\doCodecTestWithEncState(Image&,lodepng::State&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testGetFilterTypes()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\doCodecTestInterlaced(Image&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\doCodecTest(Image&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\codecTest(unsigned,unsigned,LodePNGColorType= LCT_RGBA,unsigned= 8)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\removeSpaces(std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\bitStringToBytes(std::vector<unsigned char>&,std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\colorConvertTest(std::string const&,LodePNGColorType,unsigned,std::string const&,LodePNGColorType,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testOtherPattern2()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testOtherPattern1()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testSinglePixel(int,int,int,int)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testColor(int,int,int,int)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testPNGCodec()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testSize(unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testFewColors()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testColorConvert2()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testCompressStringZlib(std::string const&,bool)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testDiskCompressZlib(std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testDiskPNG(std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\strtovector(std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testColorConvert()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testHuffmanCodeLengths()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\doTestHuffmanCodeLengths(std::string const&,std::string const&,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\createComplexPNG(std::vector<unsigned char>&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testCompressZlib()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testComplexPNG()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testInspectChunk()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\extractChunkNames(std::vector<unsigned char>const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testPaletteFilterTypesZero()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testPaletteToPaletteConvert()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\doRGBAToPaletteTest(unsigned char*,size_t,LodePNGColorType= LCT_PALETTE)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testColorKeyConvert()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testNoAutoConvert()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\flipBit(unsigned char,int)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testFuzzing()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testCustomZlibCompress()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testCustomZlibCompress2()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testRGBToPaletteConvert()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testCustomDeflate()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testCustomZlibDecompress()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testCustomInflate()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testPredefinedFilters()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\test16bitColorEndianness()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testChunkUtil()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testEncoderErrors()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\addColor(std::vector<unsigned char>&,unsigned char,unsigned char,unsigned char,unsigned char)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testAutoColorModel(std::vector<unsigned char>const&,unsigned,LodePNGColorType,unsigned,bool)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\addColor16(std::vector<unsigned char>&,unsigned short,unsigned short,unsigned short,unsigned short)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testPaletteToPaletteDecode()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testPaletteToPaletteDecode2()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testColorProfile()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testAutoColorModels()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\assertExifDataEqual(lodepng::State const&,lodepng::State const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testExif()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\assertColorProfileDataEqual(lodepng::State const&,lodepng::State const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testBkgdChunk(unsigned,unsigned,unsigned,unsigned,unsigned,unsigned,std::vector<unsigned char>const&,unsigned,unsigned,LodePNGColorMode const&,LodePNGColorMode const&,bool,bool= false)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testBkgdChunk()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testBkgdChunk2()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testBkgdChunk(unsigned,unsigned,unsigned,unsigned,unsigned,unsigned,LodePNGColorType,unsigned,LodePNGColorType,unsigned,LodePNGColorType,unsigned,bool,bool= false)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testSbitChunk(unsigned,unsigned,unsigned,unsigned,std::vector<unsigned char>const&,unsigned,unsigned,LodePNGColorMode const&,LodePNGColorMode const&,bool,bool= false)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testSbitChunk()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testSbitChunk(unsigned,unsigned,unsigned,unsigned,LodePNGColorType,unsigned,bool= false)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testSbitChunk2(unsigned,unsigned,unsigned,unsigned,LodePNGColorType,unsigned,LodePNGColorType,unsigned,LodePNGColorType,unsigned,int,bool= false)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testChrmToSrgb()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testXYZ()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testChrmToSrgb(unsigned,unsigned,unsigned,unsigned,unsigned,unsigned,unsigned,unsigned,unsigned,unsigned char,unsigned char,unsigned char,unsigned char,unsigned char,unsigned char,int= 0)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testICC()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testBase64Image(std::string const&,bool,unsigned,unsigned,std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testICCGray()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testPngSuiteImage(std::string const&,std::string const&,bool,unsigned,unsigned,std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testErrorImages()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\doMain()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_unittest.cpp\\testPngSuite()

TEST.UNIT: .\\lvandeve_lodepng\\src\\lodepng_util.cpp
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\getPNGHeaderInfo(std::vector<unsigned char>const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\getChunkInfo(std::vector<std::string>&,std::vector<size_t>&,std::vector<unsigned char>const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\getChunks(std::vector<std::string>[3],std::vector<std::vector<unsigned char>>[3],std::vector<unsigned char>const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\insertChunks(std::vector<unsigned char>&,std::vector<std::vector<unsigned char>>const[3])
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\getFilterTypesInterlaced(std::vector<std::vector<unsigned char>>&,std::vector<unsigned char>const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\getFilterTypes(std::vector<unsigned char>&,std::vector<unsigned char>const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\getPaletteValue(unsigned char const*,size_t,int)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\lodepng_mulofl(size_t,size_t,size_t*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\lodepng_malloc(size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\lodepng_free(void*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\lodepng_powf(float,float)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\lodepng_icc_curve_init(LodePNGICCCurve*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\lodepng_icc_curve_cleanup(LodePNGICCCurve*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\lodepng_icc_init(LodePNGICC*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\lodepng_icc_cleanup(LodePNGICC*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\iccForwardTRC(LodePNGICCCurve const*,float)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\iccBackwardTRC(LodePNGICCCurve const*,float)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\decodeICCUint16(unsigned char const*,size_t,size_t*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\decodeICCUint32(unsigned char const*,size_t,size_t*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\decodeICCInt32(unsigned char const*,size_t,size_t*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\decodeICC15Fixed16(unsigned char const*,size_t,size_t*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\isICCword(unsigned char const*,size_t,size_t,char const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\parseICC(LodePNGICC*,unsigned char const*,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\mulMatrix(float*,float*,float*,float const*,double,double,double)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\mulMatrixMatrix(float*,float const*,float const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\invMatrix(float*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\getChrmMatrixXYZ(float*,float,float,float,float,float,float,float,float,float,float,float,float)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\getChrmMatrixXY(float*,float,float,float,float,float,float,float,float)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\getAdaptationMatrix(float*,int,float,float,float,float,float,float)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\validateICC(LodePNGICC const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\getICCChrm(float[9],float[3],LodePNGICC const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\getChrm(float[9],float[3],unsigned,LodePNGICC const*,LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\isSRGB(LodePNGInfo const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\modelsEqual(LodePNGState const*,LodePNGState const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\convertToXYZ_gamma(float*,float const*,unsigned,unsigned,LodePNGInfo const*,unsigned,LodePNGICC const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\convertToXYZ_gamma_table(float*,size_t,size_t,LodePNGInfo const*,unsigned,LodePNGICC const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\convertToXYZ_chrm(float*,unsigned,unsigned,LodePNGInfo const*,unsigned,LodePNGICC const*,float[3])
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\convertToXYZ(float*,float[3],unsigned char const*,unsigned,unsigned,LodePNGState const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\convertToXYZFloat(float*,float[3],float const*,unsigned,unsigned,LodePNGState const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\convertFromXYZ_chrm(float*,float const*,unsigned,unsigned,LodePNGInfo const*,unsigned,LodePNGICC const*,float const[3],unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\convertFromXYZ_gamma(float*,unsigned,unsigned,LodePNGInfo const*,unsigned,LodePNGICC const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\convertFromXYZ(unsigned char*,float const*,unsigned,unsigned,LodePNGState const*,float const[3],unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\convertFromXYZFloat(float*,float const*,unsigned,unsigned,LodePNGState const*,float const[3],unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\convertRGBModel(unsigned char*,unsigned char const*,unsigned,unsigned,LodePNGState const*,LodePNGState const*,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\convertToSrgb(unsigned char*,unsigned char const*,unsigned,unsigned,LodePNGState const*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\lodepng_util.cpp\\lodepng\\convertFromSrgb(unsigned char*,unsigned char const*,unsigned,unsigned,LodePNGState const*)

TEST.UNIT: .\\lvandeve_lodepng\\src\\pngdetail.cpp
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\Options\\Options()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\showHelp()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\inspect_chunk_by_name(unsigned char const*,unsigned char const*,lodepng::State&,char const[5])
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\Data\\Data(std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\Data\\loadFile()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\Data\\isPng()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\Data\\isIcc()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\Data\\isExif()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\Data\\loadInspect()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\Data\\loadPixels()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\Data\\reloadPixels()
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\colorTypeString(LodePNGColorType)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\strtoval(std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\displayChunkNames(Data&,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\RGBtoHSL(unsigned char,unsigned char,unsigned char,unsigned char*,unsigned char*,unsigned char*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\RGBtoHCT(unsigned char,unsigned char,unsigned char,unsigned char*,unsigned char*,unsigned char*)
TEST.NEW
TEST.NAME:RGBtoHCT_unsigned_char_unsigned_char_unsigned_char_unsigned_charmul_unsigned_charmul_unsigned_charmul_manual_0
TEST.END
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\lightnessToLetter(int)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\HueToLetter(int)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\RGBtoLetter(unsigned char,unsigned char,unsigned char,unsigned char,unsigned,unsigned,bool= true,bool= false)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\applyDither(int,int,int,int,bool)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\rescale(std::vector<unsigned char>const&,int,int,int,int,bool)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\displayColorsHex(std::vector<unsigned char>const&,unsigned,unsigned,bool)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\displayFilterTypes(Data&,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\displayPalette(Data&,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\displayPalettePixels(std::vector<unsigned char>const&,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\displayAsciiArt(std::vector<unsigned char>const&,unsigned,unsigned,unsigned)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\printZlibInfo(Data&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\countColors(std::vector<unsigned char>const&,unsigned,unsigned,size_t*,size_t*,size_t*,size_t*)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\loadWithErrorRecovery(Data&,Options const&,bool)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\showSingleLineSummary(Data&,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\showError(Data&,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\getICCUint16(unsigned char const*,size_t,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\getICCInt32(unsigned char const*,size_t,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\getICCUint32(unsigned char const*,size_t,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\getICC16Fixed16(unsigned char const*,size_t,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\getICC15Fixed16(unsigned char const*,size_t,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\printableICCWord(unsigned char const*,size_t,size_t)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\printICCDetails(unsigned char const*,size_t,std::string const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\showHex(unsigned char const*,size_t,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\showHeaderInfo(Data&,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\shortenText(std::string const&,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\showPNGInfo(Data&,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\showColorStats(Data&,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\showErrors(Data&,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\readExifUint32(unsigned char const*,size_t,size_t,bool)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\readExifUint16(unsigned char const*,size_t,size_t,bool)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\showExifIFD(unsigned char const*,size_t,size_t,bool,bool,bool)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\showExif(Data&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\showRender(Data&,Options const&)
TEST.SUBPROGRAM: .\\lvandeve_lodepng\\src\\pngdetail.cpp\\showInfos(Data&,Options const&)

